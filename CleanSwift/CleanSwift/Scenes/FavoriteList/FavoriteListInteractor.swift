//
//  FavoriteListInteractor.swift
//  CleanSwift_test
//
//  Created by Paul Jang on 2019/12/23.
//  Copyright (c) 2019 Paul Jang. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteListBusinessLogic {
    func doFavoriteCheck(request: FavoriteList.favoriteModel.Request, state: Int)
    func completionHandler(request: FavoriteList.CompletionHandler.Request, completionHandler: (String, Int) -> Void)
    func doSearchUser(request: FavoriteList.listPreview.Request, completionHandler: () -> Void)
}

protocol FavoriteListDataStore {
}

class FavoriteListInteractor: FavoriteListBusinessLogic, FavoriteListDataStore {
    var presenter: FavoriteListPresentationLogic?
    var worker: FavoriteListWorker?

    var page: Int = 0
    
    func doFavoriteCheck(request: FavoriteList.favoriteModel.Request, state: Int) {
        let structData = request.favoriteSelect as! SearchUserList.listPreview.ViewModel.listPreviewData
        
        if state == 1 {
            SqlService.shared.saveData(id: structData.id, avatar_url: structData.avatar_url, score: structData.score, login: structData.login)
        } else {
            SqlService.shared.deleteData(id: structData.id)
        }
    }
    
    func completionHandler(request: FavoriteList.CompletionHandler.Request, completionHandler: (String, Int) -> Void) {
        if request.tag == -1 {
            if SqlService.shared.idSet.contains(request.id) {
                completionHandler("star_on", 1)
            } else {
                completionHandler("star_off", 0)
            }
        } else {
            if request.tag == 0 {
                completionHandler("star_on", 1)
            } else {
                completionHandler("star_off", 0)
            }
        }
    }
    
    func doSearchUser(request: FavoriteList.listPreview.Request, completionHandler: () -> Void) {
        if request.searchText?.count == 0 {
            SqlService.shared.searchAllData()
        } else {
            SqlService.shared.searchUser(login: request.searchText ?? "")
        }

        completionHandler()
    }
}
